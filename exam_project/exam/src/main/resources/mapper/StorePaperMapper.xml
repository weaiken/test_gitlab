<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exam.dao.StorePaperMapper" >
  <resultMap id="BaseResultMap" type="com.exam.entity.StorePaper" >
    <id column="spid" property="spid" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="sale_num" property="saleNum" jdbcType="INTEGER" />
    <result column="int_1" property="int1" jdbcType="INTEGER" />
    <result column="int_2" property="int2" jdbcType="INTEGER" />
    <result column="var_1" property="var1" jdbcType="VARCHAR" />
    <result column="var_2" property="var2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    spid, pid, price, sale_num, int_1, int_2, var_1, var_2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.exam.entity.StorePaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from store_paper
    where spid = #{spid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store_paper
    where spid = #{spid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exam.entity.StorePaperExample" >
    delete from store_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exam.entity.StorePaper" >
    insert into store_paper (spid, pid, price, 
      sale_num, int_1, int_2, 
      var_1, var_2)
    values (#{spid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{saleNum,jdbcType=INTEGER}, #{int1,jdbcType=INTEGER}, #{int2,jdbcType=INTEGER}, 
      #{var1,jdbcType=VARCHAR}, #{var2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.entity.StorePaper" >
    insert into store_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spid != null" >
        spid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="saleNum != null" >
        sale_num,
      </if>
      <if test="int1 != null" >
        int_1,
      </if>
      <if test="int2 != null" >
        int_2,
      </if>
      <if test="var1 != null" >
        var_1,
      </if>
      <if test="var2 != null" >
        var_2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spid != null" >
        #{spid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="saleNum != null" >
        #{saleNum,jdbcType=INTEGER},
      </if>
      <if test="int1 != null" >
        #{int1,jdbcType=INTEGER},
      </if>
      <if test="int2 != null" >
        #{int2,jdbcType=INTEGER},
      </if>
      <if test="var1 != null" >
        #{var1,jdbcType=VARCHAR},
      </if>
      <if test="var2 != null" >
        #{var2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exam.entity.StorePaperExample" resultType="java.lang.Integer" >
    select count(*) from store_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store_paper
    <set >
      <if test="record.spid != null" >
        spid = #{record.spid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.saleNum != null" >
        sale_num = #{record.saleNum,jdbcType=INTEGER},
      </if>
      <if test="record.int1 != null" >
        int_1 = #{record.int1,jdbcType=INTEGER},
      </if>
      <if test="record.int2 != null" >
        int_2 = #{record.int2,jdbcType=INTEGER},
      </if>
      <if test="record.var1 != null" >
        var_1 = #{record.var1,jdbcType=VARCHAR},
      </if>
      <if test="record.var2 != null" >
        var_2 = #{record.var2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store_paper
    set spid = #{record.spid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      sale_num = #{record.saleNum,jdbcType=INTEGER},
      int_1 = #{record.int1,jdbcType=INTEGER},
      int_2 = #{record.int2,jdbcType=INTEGER},
      var_1 = #{record.var1,jdbcType=VARCHAR},
      var_2 = #{record.var2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.entity.StorePaper" >
    update store_paper
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="saleNum != null" >
        sale_num = #{saleNum,jdbcType=INTEGER},
      </if>
      <if test="int1 != null" >
        int_1 = #{int1,jdbcType=INTEGER},
      </if>
      <if test="int2 != null" >
        int_2 = #{int2,jdbcType=INTEGER},
      </if>
      <if test="var1 != null" >
        var_1 = #{var1,jdbcType=VARCHAR},
      </if>
      <if test="var2 != null" >
        var_2 = #{var2,jdbcType=VARCHAR},
      </if>
    </set>
    where spid = #{spid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.entity.StorePaper" >
    update store_paper
    set pid = #{pid,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      sale_num = #{saleNum,jdbcType=INTEGER},
      int_1 = #{int1,jdbcType=INTEGER},
      int_2 = #{int2,jdbcType=INTEGER},
      var_1 = #{var1,jdbcType=VARCHAR},
      var_2 = #{var2,jdbcType=VARCHAR}
    where spid = #{spid,jdbcType=INTEGER}
  </update>
</mapper>